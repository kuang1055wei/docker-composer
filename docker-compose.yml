version: "1.0"
# docker-compose up -d -f docker-compose.yml

# 使用创建好的网络，而不是让docker-compose自己创建网络
networks:
  app-net:
    name: app-net

# docker-compose 创建网卡
#networks:
#  app-net:
#    driver: bridge

services:
#  redis:
#    image: bitnami/redis:latest
#    container_name: redis
#    restart: always
#    networks:
#      - app-net
#    ports:
#      - 6379:6379
#    environment:
#      ALLOW_EMPTY_PASSWORD: "yes" #允许空密码登录
#      REDIS_EXTRA_FLAGS: "--loadmodule /bitnami/redis/module/redisbloom.so" # 加载redisbloom模块
#    volumes:
#      -  ./redis/data:/bitnami/redis/data
#      - ./redis/module:/bitnami/redis/module
#    logging:
#      driver: "json-file"
#      options:
#        max-size: "10m"
#        max-file: "3"

# https://hub.docker.com/r/redis/redis-stack-server
  redis:
    image: redis/redis-stack-server:latest
    container_name: redis
    restart: always
    networks:
      - app-net
    ports:
      - 6379:6379
#    environment:
#      REDIS_ARGS: "--requirepass mypassword" #设置密码
#      REDISBLOOM_ARGS: "" #RedisBloom 的参数
    volumes:
      - ./redis/data:/data
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
#  etcd-server:
#    image: bitnami/etcd:3.4.18
#    container_name: etcd-server
#    restart: always
#    networks:
#      - app-net
#    ports:
#      - 2379:2379
#      - 2380:2380
#    environment:
#      ALLOW_NONE_AUTHENTICATION: "yes"
#      # 在测试环境可用这个配置：ETCD_ADVERTISE_CLIENT_URLS: "http://etcd-server:2379,http://192.168.50.100:2379"
#      # 测试服务器会导致连接错误，所以补上192.168.50.100:2379，如果完全是内网，则使用http://etcd-server:2379即可
#      ETCD_ADVERTISE_CLIENT_URLS: "http://etcd-server:2379,http://192.168.50.100:2379"
#    logging:
#      driver: "json-file"
#      options:
#        max-size: "10m"
#        max-file: "3"

  #用户名：ginghan 密码：123456
#  etcd-manage:
#    build: ./etcd-manage/
#    container_name: etcd-manage
##    image: "shiguanghuxian/etcd-manage"
#    networks:
#      - app-net
#    volumes:
#      - ./etcd-manage/bin/config/cfg.toml:/app/config/cfg.toml
#      - ./etcd-manage/bin/logs:/app/logs
#    ports:
#      - "10280:10280"
#    depends_on:
#      - etcd-server

#  elasticsearch:
#    image: elasticsearch:7.16.1
#    container_name: elasticsearch
#    restart: always
#    networks:
#      - app-net
#    ports:
#      - 9200:9200
#      - 9300:9300
#    environment:
#      - discovery.type=single-node
#      - ES_JAVA_OPTS=-Xms256m -Xmx256m
#    volumes:
#      - ./elasticsearch/data:/usr/share/elasticsearch/data
#      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
#    logging:
#      driver: "json-file"
#      options:
#        max-size: "10m"
#        max-file: "3"

  # es的web管理界面
#  elasticsearch-head:
#    image: mobz/elasticsearch-head:5-alpine
#    container_name: elasticsearch-head
#    restart: always
#    networks:
#      - app-net
#    ports:
#      - 9100:9100
#    logging:
#      driver: "json-file"
#      options:
#        max-size: "10m"
#        max-file: "3"
#
#  jaeger:
#    image: jaegertracing/all-in-one
#    container_name: jaeger
#    restart: always
#    networks:
#      - app-net
#    ports:
#      - 16686:16686
#      - 14268:14268 #UDP  agent发送jaeger.thrift格式数据
#      - 5775:5775 #UDP  接收兼容zipkin的协议数据
#      - 6831:6831 #UDP  接收兼容jaeger的兼容协议
#      - 5778:5778 #http 数据量大不建议使用
#      - 9411:9411
#    environment: #如果要依赖elasticsearch，请打开下面的配置
#      SPAN_STORAGE_TYPE: "elasticsearch" #配置elasticsearch 作为存储
#      ES_SERVER_URLS: "http://elasticsearch:9200" #配置elasticsearch 作为存储
#    depends_on:
#      - elasticsearch
#    logging:
#      driver: "json-file"
#      options:
#        max-size: "10m"
#        max-file: "3"


#  kibana:
#    image: kibana:7.16.1
#    container_name: kibana
#    restart: always
#    networks:
#      - app-net
#    ports:
#      - 5601:5601
#    environment:
#      ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
#    volumes:
#      - ./kibana/config:/usr/share/kibana/config #配置文件挂载
#    depends_on:
#      - elasticsearch
##
#  zookeeper:
#    image: 'bitnami/zookeeper:latest'
#    container_name: zookeeper
#    restart: always
#    networks:
#      - app-net
#    ports:
#      - 2181:2181
#    environment:
#      ALLOW_ANONYMOUS_LOGIN: yes
#
#  kafka:
#    image: bitnami/kafka:latest
#    container_name: kafka
#    restart: always
#    networks:
#      - app-net
#    ports:
#      - 9092:9092
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092"
#      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
#      KAFKA_CFG_ZOOKEEPER_CONNECT: "zookeeper:2181"
#      ALLOW_PLAINTEXT_LISTENER: "yes"
#      KAFKA_HEAP_OPTS: "-Xmx256m -Xms256m"
#    depends_on:
#      - zookeeper
